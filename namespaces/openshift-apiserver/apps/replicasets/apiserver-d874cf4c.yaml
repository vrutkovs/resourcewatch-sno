apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "1"
    deployment.kubernetes.io/revision: "2"
    openshiftapiservers.operator.openshift.io/operator-pull-spec: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4a45ea831c6c08852fd296829a2e6aa0fc487d9d70241c5b283e3e3d85a1b200
    openshiftapiservers.operator.openshift.io/pull-spec: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ce9212424126132c428ebb72a0920cbf36c6ac18059f16776f370fe684cdc2d0
    operator.openshift.io/dep-desired.generation: "2"
    operator.openshift.io/dep-openshift-apiserver.config.configmap: 1lYKhA==
    operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: xXZOrA==
    operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: YGyp3g==
    operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
    operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: O1lK1A==
    operator.openshift.io/spec-hash: b799b1072355d491cf528f3c97cae3193ea685762fa2e4e70695c959a22d7c30
  creationTimestamp: "2023-03-08T12:08:48Z"
  generation: 2
  labels:
    apiserver: "true"
    app: openshift-apiserver-a
    openshift-apiserver-anti-affinity: "true"
    pod-template-hash: d874cf4c
    revision: "2"
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/desired-replicas: {}
          f:deployment.kubernetes.io/max-replicas: {}
          f:deployment.kubernetes.io/revision: {}
          f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
          f:openshiftapiservers.operator.openshift.io/pull-spec: {}
          f:operator.openshift.io/dep-desired.generation: {}
          f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
          f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
          f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
          f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
          f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
          f:operator.openshift.io/spec-hash: {}
        f:labels:
          .: {}
          f:apiserver: {}
          f:app: {}
          f:openshift-apiserver-anti-affinity: {}
          f:pod-template-hash: {}
          f:revision: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"39c861b0-f670-4019-8902-338c30caa998"}: {}
      f:spec:
        f:replicas: {}
        f:selector: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:operator.openshift.io/dep-desired.generation: {}
              f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
              f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
              f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
              f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
              f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
              f:target.workload.openshift.io/management: {}
            f:labels:
              .: {}
              f:apiserver: {}
              f:app: {}
              f:openshift-apiserver-anti-affinity: {}
              f:pod-template-hash: {}
              f:revision: {}
            f:name: {}
          f:spec:
            f:affinity:
              .: {}
              f:podAntiAffinity:
                .: {}
                f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:containers:
              k:{"name":"openshift-apiserver"}:
                .: {}
                f:args: {}
                f:command: {}
                f:env:
                  .: {}
                  k:{"name":"POD_NAME"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                  k:{"name":"POD_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8443,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:privileged: {}
                  f:readOnlyRootFilesystem: {}
                  f:runAsUser: {}
                f:startupProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/lib/kubelet/"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/var/log/openshift-apiserver"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/audit"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/secrets/encryption-config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/secrets/etcd-client"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/secrets/serving-cert"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"openshift-apiserver-check-endpoints"}:
                .: {}
                f:args: {}
                f:command: {}
                f:env:
                  .: {}
                  k:{"name":"POD_NAME"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                  k:{"name":"POD_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:fieldRef: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":17698,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:initContainers:
              .: {}
              k:{"name":"fix-audit-permissions"}:
                .: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:privileged: {}
                  f:runAsUser: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/log/openshift-apiserver"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:nodeSelector: {}
            f:priorityClassName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              .: {}
              k:{"name":"audit"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"audit-dir"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"config"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"encryption-config"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:optional: {}
                  f:secretName: {}
              k:{"name":"etcd-client"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"etcd-serving-ca"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"image-import-ca"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                  f:optional: {}
                f:name: {}
              k:{"name":"node-pullsecrets"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"serving-cert"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"trusted-ca-bundle"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:items: {}
                  f:name: {}
                  f:optional: {}
                f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-03-08T12:08:48Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:fullyLabeledReplicas: {}
        f:observedGeneration: {}
        f:replicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2023-03-08T12:17:48Z"
  name: apiserver-d874cf4c
  namespace: openshift-apiserver
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: apiserver
    uid: 39c861b0-f670-4019-8902-338c30caa998
  resourceVersion: "7987"
  uid: 46d58985-0a5c-4227-a165-9f030be2749f
spec:
  replicas: 1
  selector:
    matchLabels:
      apiserver: "true"
      app: openshift-apiserver-a
      pod-template-hash: d874cf4c
  template:
    metadata:
      annotations:
        operator.openshift.io/dep-desired.generation: "2"
        operator.openshift.io/dep-openshift-apiserver.config.configmap: 1lYKhA==
        operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: xXZOrA==
        operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: YGyp3g==
        operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
        operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: O1lK1A==
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      creationTimestamp: null
      labels:
        apiserver: "true"
        app: openshift-apiserver-a
        openshift-apiserver-anti-affinity: "true"
        pod-template-hash: d874cf4c
        revision: "2"
      name: openshift-apiserver
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                apiserver: "true"
                app: openshift-apiserver-a
                openshift-apiserver-anti-affinity: "true"
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - |
          if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
            echo "Copying system trust bundle"
            cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
          fi
          exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
        command:
        - /bin/bash
        - -ec
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ce9212424126132c428ebb72a0920cbf36c6ac18059f16776f370fe684cdc2d0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: healthz
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: openshift-apiserver
        ports:
        - containerPort: 8443
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: readyz
            port: 8443
            scheme: HTTPS
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          runAsUser: 0
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: healthz
            port: 8443
            scheme: HTTPS
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/kubelet/
          name: node-pullsecrets
          readOnly: true
        - mountPath: /var/run/configmaps/config
          name: config
        - mountPath: /var/run/configmaps/audit
          name: audit
        - mountPath: /var/run/secrets/etcd-client
          name: etcd-client
        - mountPath: /var/run/configmaps/etcd-serving-ca
          name: etcd-serving-ca
        - mountPath: /var/run/configmaps/image-import-ca
          name: image-import-ca
        - mountPath: /var/run/configmaps/trusted-ca-bundle
          name: trusted-ca-bundle
        - mountPath: /var/run/secrets/serving-cert
          name: serving-cert
        - mountPath: /var/run/secrets/encryption-config
          name: encryption-config
        - mountPath: /var/log/openshift-apiserver
          name: audit-dir
      - args:
        - --listen
        - 0.0.0.0:17698
        - --namespace
        - $(POD_NAMESPACE)
        - --v
        - "2"
        command:
        - cluster-kube-apiserver-operator
        - check-endpoints
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:650a4fe3a4a5c06f93cf133d92c9a65f2546c278d8d95a6b3e36615b935b4a43
        imagePullPolicy: IfNotPresent
        name: openshift-apiserver-check-endpoints
        ports:
        - containerPort: 17698
          name: check-endpoints
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
          && chmod 0600 /var/log/openshift-apiserver/*
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ce9212424126132c428ebb72a0920cbf36c6ac18059f16776f370fe684cdc2d0
        imagePullPolicy: IfNotPresent
        name: fix-audit-permissions
        resources:
          requests:
            cpu: 15m
            memory: 50Mi
        securityContext:
          privileged: true
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/log/openshift-apiserver
          name: audit-dir
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: openshift-apiserver-sa
      serviceAccountName: openshift-apiserver-sa
      terminationGracePeriodSeconds: 90
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 120
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 120
      volumes:
      - hostPath:
          path: /var/lib/kubelet/
          type: Directory
        name: node-pullsecrets
      - configMap:
          defaultMode: 420
          name: config
        name: config
      - configMap:
          defaultMode: 420
          name: audit-2
        name: audit
      - name: etcd-client
        secret:
          defaultMode: 384
          secretName: etcd-client
      - configMap:
          defaultMode: 420
          name: etcd-serving-ca
        name: etcd-serving-ca
      - configMap:
          defaultMode: 420
          name: image-import-ca
          optional: true
        name: image-import-ca
      - name: serving-cert
        secret:
          defaultMode: 384
          secretName: serving-cert
      - configMap:
          defaultMode: 420
          items:
          - key: ca-bundle.crt
            path: tls-ca-bundle.pem
          name: trusted-ca-bundle
          optional: true
        name: trusted-ca-bundle
      - name: encryption-config
        secret:
          defaultMode: 384
          optional: true
          secretName: encryption-config-2
      - hostPath:
          path: /var/log/openshift-apiserver
          type: ""
        name: audit-dir
status:
  fullyLabeledReplicas: 1
  observedGeneration: 2
  replicas: 1
