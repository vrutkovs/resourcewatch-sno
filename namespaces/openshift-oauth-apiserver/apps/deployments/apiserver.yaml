apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    openshiftapiservers.operator.openshift.io/operator-pull-spec: ""
    operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: ooXkMg==
    operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: XxxUkw==
    operator.openshift.io/spec-hash: 07e24dc6698c2c8273664434cdc94d5ebb7d007958e7273b1d3fd8bdcb5e3817
  creationTimestamp: "2023-03-09T14:22:12Z"
  generation: 2
  labels:
    apiserver: "true"
    app: openshift-oauth-apiserver
    revision: "0"
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
          f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
          f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
          f:operator.openshift.io/spec-hash: {}
        f:labels:
          .: {}
          f:apiserver: {}
          f:app: {}
          f:revision: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
              f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
              f:target.workload.openshift.io/management: {}
            f:labels:
              .: {}
              f:apiserver: {}
              f:app: {}
              f:oauth-apiserver-anti-affinity: {}
              f:revision: {}
            f:name: {}
          f:spec:
            f:affinity:
              .: {}
              f:podAntiAffinity:
                .: {}
                f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:containers:
              k:{"name":"oauth-apiserver"}:
                .: {}
                f:args: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8443,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:privileged: {}
                  f:runAsUser: {}
                f:startupProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/log/oauth-apiserver"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/audit"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/secrets/encryption-config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/secrets/etcd-client"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/secrets/serving-cert"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:initContainers:
              .: {}
              k:{"name":"fix-audit-permissions"}:
                .: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:privileged: {}
                  f:runAsUser: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/log/oauth-apiserver"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:nodeSelector: {}
            f:priorityClassName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              .: {}
              k:{"name":"audit-dir"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"audit-policies"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"encryption-config"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:optional: {}
                  f:secretName: {}
              k:{"name":"etcd-client"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"etcd-serving-ca"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"serving-cert"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"trusted-ca-bundle"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:items: {}
                  f:name: {}
                  f:optional: {}
                f:name: {}
    manager: authentication-operator
    operation: Update
    time: "2023-03-09T14:22:33Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:replicas: {}
        f:unavailableReplicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2023-03-09T14:22:33Z"
  name: apiserver
  namespace: openshift-oauth-apiserver
  resourceVersion: "5438"
  uid: 39c9e401-3aa2-4df1-a514-e9eb77325346
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      apiserver: "true"
      app: openshift-oauth-apiserver
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: ooXkMg==
        operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: XxxUkw==
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      creationTimestamp: null
      labels:
        apiserver: "true"
        app: openshift-oauth-apiserver
        oauth-apiserver-anti-affinity: "true"
        revision: "0"
      name: openshift-oauth-apiserver
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                apiserver: "true"
                app: openshift-oauth-apiserver
                oauth-apiserver-anti-affinity: "true"
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - |
          if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
            echo "Copying system trust bundle"
            cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
          fi
          exec oauth-apiserver start \
            --secure-port=8443 \
            --audit-log-path=/var/log/oauth-apiserver/audit.log \
            --audit-log-format=json \
            --audit-log-maxsize=100 \
            --audit-log-maxbackup=10 \
            --audit-policy-file=/var/run/configmaps/audit/policy.yaml \
            --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \
            --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \
            --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \
            --shutdown-delay-duration=15s \
            --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \
            --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \
            --api-audiences=https://kubernetes.default.svc \
            --cors-allowed-origins='//127\.0\.0\.1(:|$)' \
            --cors-allowed-origins='//localhost(:|$)' \
            --etcd-servers=https://10.0.130.93:2379 \
            --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
            --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \
            --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \
            --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \
            --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \
            --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \
            --tls-min-version=VersionTLS12 \
            --v=2
        command:
        - /bin/bash
        - -ec
        image: registry.build05.ci.openshift.org/ci-ln-88xnydk/stable@sha256:5a2b43418ecaae507b49eede5bd621226eb19cc148792870139c8c28402fec71
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: healthz
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: oauth-apiserver
        ports:
        - containerPort: 8443
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: readyz
            port: 8443
            scheme: HTTPS
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 150m
            memory: 200Mi
        securityContext:
          privileged: true
          runAsUser: 0
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: healthz
            port: 8443
            scheme: HTTPS
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/configmaps/audit
          name: audit-policies
        - mountPath: /var/run/secrets/etcd-client
          name: etcd-client
        - mountPath: /var/run/configmaps/etcd-serving-ca
          name: etcd-serving-ca
        - mountPath: /var/run/configmaps/trusted-ca-bundle
          name: trusted-ca-bundle
        - mountPath: /var/run/secrets/serving-cert
          name: serving-cert
        - mountPath: /var/run/secrets/encryption-config
          name: encryption-config
        - mountPath: /var/log/oauth-apiserver
          name: audit-dir
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log
          && chmod 0600 /var/log/oauth-apiserver/*
        image: registry.build05.ci.openshift.org/ci-ln-88xnydk/stable@sha256:5a2b43418ecaae507b49eede5bd621226eb19cc148792870139c8c28402fec71
        imagePullPolicy: IfNotPresent
        name: fix-audit-permissions
        resources:
          requests:
            cpu: 15m
            memory: 50Mi
        securityContext:
          privileged: true
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/log/oauth-apiserver
          name: audit-dir
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: oauth-apiserver-sa
      serviceAccountName: oauth-apiserver-sa
      terminationGracePeriodSeconds: 90
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 120
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 120
      volumes:
      - configMap:
          defaultMode: 420
          name: audit-0
        name: audit-policies
      - name: etcd-client
        secret:
          defaultMode: 420
          secretName: etcd-client
      - configMap:
          defaultMode: 420
          name: etcd-serving-ca
        name: etcd-serving-ca
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: serving-cert
      - configMap:
          defaultMode: 420
          items:
          - key: ca-bundle.crt
            path: tls-ca-bundle.pem
          name: trusted-ca-bundle
          optional: true
        name: trusted-ca-bundle
      - name: encryption-config
        secret:
          defaultMode: 420
          optional: true
          secretName: encryption-config-0
      - hostPath:
          path: /var/log/oauth-apiserver
          type: ""
        name: audit-dir
status:
  conditions:
  - lastTransitionTime: "2023-03-09T14:22:12Z"
    lastUpdateTime: "2023-03-09T14:22:12Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2023-03-09T14:22:12Z"
    lastUpdateTime: "2023-03-09T14:22:33Z"
    message: Created new replica set "apiserver-59d77f47f7"
    reason: NewReplicaSetCreated
    status: "True"
    type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
