apiVersion: v1
kind: Pod
metadata:
  annotations:
    console.openshift.io/console-config-version: "16949"
    console.openshift.io/image: registry.build05.ci.openshift.org/ci-ln-88xnydk/stable@sha256:56b0668235191f7a5cf04912684788ce1ca0a8e36f7eaae7b016f1de8485de74
    console.openshift.io/infrastructure-config-version: "552"
    console.openshift.io/oauth-secret-version: "15390"
    console.openshift.io/oauth-serving-cert-config-version: "14771"
    console.openshift.io/proxy-config-version: "568"
    console.openshift.io/service-ca-config-version: "15279"
    console.openshift.io/trusted-ca-config-version: "15306"
    openshift.io/scc: restricted-v2
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2023-03-09T14:34:59Z"
  generateName: console-5879b645d5-
  labels:
    app: console
    component: ui
    pod-template-hash: 5879b645d5
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:console.openshift.io/console-config-version: {}
          f:console.openshift.io/image: {}
          f:console.openshift.io/infrastructure-config-version: {}
          f:console.openshift.io/oauth-secret-version: {}
          f:console.openshift.io/oauth-serving-cert-config-version: {}
          f:console.openshift.io/proxy-config-version: {}
          f:console.openshift.io/service-ca-config-version: {}
          f:console.openshift.io/trusted-ca-config-version: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:component: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"0f354b94-b053-4264-af8f-a4995b7f4b27"}: {}
      f:spec:
        f:affinity: {}
        f:containers:
          k:{"name":"console"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:lifecycle:
              .: {}
              f:preStop:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/console-config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/oauth-config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/oauth-serving-cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/service-ca"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/serving-cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:runAsNonRoot: {}
          f:seccompProfile:
            .: {}
            f:type: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"console-config"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"console-oauth-config"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"console-serving-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"oauth-serving-cert"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"service-ca"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"trusted-ca-bundle"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-03-09T14:34:59Z"
  name: console-5879b645d5-gp5sl
  namespace: openshift-console
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: console-5879b645d5
    uid: 0f354b94-b053-4264-af8f-a4995b7f4b27
  resourceVersion: "16985"
  uid: 754ab60f-03ca-4e0a-ac8e-9f4708990007
spec:
  affinity: {}
  containers:
  - command:
    - /opt/bridge/bin/bridge
    - --public-dir=/opt/bridge/static
    - --config=/var/console-config/console-config.yaml
    - --service-ca-file=/var/service-ca/service-ca.crt
    - --v=2
    image: registry.build05.ci.openshift.org/ci-ln-88xnydk/stable@sha256:56b0668235191f7a5cf04912684788ce1ca0a8e36f7eaae7b016f1de8485de74
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        exec:
          command:
          - sleep
          - "25"
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 8443
        scheme: HTTPS
      initialDelaySeconds: 150
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: console
    ports:
    - containerPort: 8443
      name: https
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 8443
        scheme: HTTPS
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000640000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /var/serving-cert
      name: console-serving-cert
      readOnly: true
    - mountPath: /var/oauth-config
      name: console-oauth-config
      readOnly: true
    - mountPath: /var/console-config
      name: console-config
      readOnly: true
    - mountPath: /var/service-ca
      name: service-ca
      readOnly: true
    - mountPath: /var/oauth-serving-cert
      name: oauth-serving-cert
      readOnly: true
    - mountPath: /etc/pki/ca-trust/extracted/pem
      name: trusted-ca-bundle
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-wsqm6
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: console-dockercfg-qrw8p
  nodeName: vrutkovs-sno
  nodeSelector:
    node-role.kubernetes.io/master: ""
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000640000
    runAsNonRoot: true
    seLinuxOptions:
      level: s0:c25,c20
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: console
  serviceAccountName: console
  terminationGracePeriodSeconds: 40
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 120
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: console-serving-cert
    secret:
      defaultMode: 420
      secretName: console-serving-cert
  - name: console-oauth-config
    secret:
      defaultMode: 420
      secretName: console-oauth-config
  - configMap:
      defaultMode: 420
      name: console-config
    name: console-config
  - configMap:
      defaultMode: 420
      name: service-ca
    name: service-ca
  - configMap:
      defaultMode: 420
      name: oauth-serving-cert
    name: oauth-serving-cert
  - configMap:
      defaultMode: 420
      items:
      - key: ca-bundle.crt
        path: tls-ca-bundle.pem
      name: trusted-ca-bundle
    name: trusted-ca-bundle
  - name: kube-api-access-wsqm6
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-09T14:34:59Z"
    status: "True"
    type: PodScheduled
  phase: Pending
  qosClass: Burstable
