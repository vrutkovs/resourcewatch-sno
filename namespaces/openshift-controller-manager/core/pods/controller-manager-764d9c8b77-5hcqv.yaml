apiVersion: v1
kind: Pod
metadata:
  annotations:
    configmaps/client-ca: "0"
    configmaps/config: "6196"
    configmaps/openshift-global-ca: "6183"
    configmaps/openshift-service-ca: "6125"
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.43/23"],"mac_address":"0a:58:0a:80:00:2b","gateway_ips":["10.128.0.1"],"ip_address":"10.128.0.43/23","gateway_ip":"10.128.0.1"}}'
    openshift.io/scc: restricted-v2
    openshiftcontrollermanagers.operator.openshift.io/cluster: "2"
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2023-03-09T14:23:01Z"
  deletionGracePeriodSeconds: 0
  deletionTimestamp: "2023-03-09T14:30:44Z"
  generateName: controller-manager-764d9c8b77-
  labels:
    app: openshift-controller-manager-a
    controller-manager: "true"
    openshift-route-controller-manager-anti-affinity: "true"
    pod-template-hash: 764d9c8b77
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:configmaps/client-ca: {}
          f:configmaps/config: {}
          f:configmaps/openshift-global-ca: {}
          f:configmaps/openshift-service-ca: {}
          f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:controller-manager: {}
          f:openshift-route-controller-manager-anti-affinity: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"8c3647d3-138a-459f-9a3a-d93754fd44c5"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:podAntiAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:containers:
          k:{"name":"controller-manager"}:
            .: {}
            f:args: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/run/configmaps/client-ca"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/run/configmaps/config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/run/secrets/serving-cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:runAsNonRoot: {}
          f:seccompProfile:
            .: {}
            f:type: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"client-ca"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"config"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"proxy-ca-bundles"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
            f:name: {}
          k:{"name":"serving-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-03-09T14:23:01Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          .: {}
          k:{"type":"PodScheduled"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: kube-scheduler
    operation: Update
    subresource: status
    time: "2023-03-09T14:23:01Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2023-03-09T14:25:05Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.ovn.org/pod-networks: {}
    manager: vrutkovs-sno
    operation: Update
    time: "2023-03-09T14:25:05Z"
  name: controller-manager-764d9c8b77-5hcqv
  namespace: openshift-controller-manager
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: controller-manager-764d9c8b77
    uid: 8c3647d3-138a-459f-9a3a-d93754fd44c5
  resourceVersion: "10955"
  uid: 947e9ae8-5f9c-4184-b0a7-26b031197531
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app: openshift-controller-manager-a
            controller-manager: "true"
            openshift-route-controller-manager-anti-affinity: "true"
        topologyKey: kubernetes.io/hostname
  containers:
  - args:
    - --config=/var/run/configmaps/config/config.yaml
    - -v=2
    command:
    - openshift-controller-manager
    - start
    image: registry.build05.ci.openshift.org/ci-ln-88xnydk/stable@sha256:e948b40220b7cdb7b4bf51bcd34f6182d63a302d688a593bf1d6100754cedec0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: healthz
        port: 8443
        scheme: HTTPS
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: controller-manager
    ports:
    - containerPort: 8443
      protocol: TCP
    readinessProbe:
      failureThreshold: 10
      httpGet:
        path: healthz
        port: 8443
        scheme: HTTPS
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000540000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /var/run/configmaps/config
      name: config
    - mountPath: /var/run/configmaps/client-ca
      name: client-ca
    - mountPath: /var/run/secrets/serving-cert
      name: serving-cert
    - mountPath: /etc/pki/ca-trust/extracted/pem
      name: proxy-ca-bundles
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-csrlw
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: vrutkovs-sno
  nodeSelector:
    node-role.kubernetes.io/master: ""
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000540000
    runAsNonRoot: true
    seLinuxOptions:
      level: s0:c23,c17
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: openshift-controller-manager-sa
  serviceAccountName: openshift-controller-manager-sa
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 120
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 120
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      name: config
    name: config
  - configMap:
      defaultMode: 420
      name: client-ca
    name: client-ca
  - name: serving-cert
    secret:
      defaultMode: 420
      secretName: serving-cert
  - configMap:
      defaultMode: 420
      items:
      - key: ca-bundle.crt
        path: tls-ca-bundle.pem
      name: openshift-global-ca
    name: proxy-ca-bundles
  - name: kube-api-access-csrlw
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-09T14:25:05Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-03-09T14:25:05Z"
    message: 'containers with unready status: [controller-manager]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-03-09T14:25:05Z"
    message: 'containers with unready status: [controller-manager]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-03-09T14:25:05Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: registry.build05.ci.openshift.org/ci-ln-88xnydk/stable@sha256:e948b40220b7cdb7b4bf51bcd34f6182d63a302d688a593bf1d6100754cedec0
    imageID: ""
    lastState: {}
    name: controller-manager
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        reason: ContainerCreating
  hostIP: 10.0.130.93
  phase: Pending
  qosClass: Burstable
  startTime: "2023-03-09T14:25:05Z"
