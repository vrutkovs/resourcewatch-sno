apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "1"
    deployment.kubernetes.io/revision: "3"
    operator.openshift.io/spec-hash: e523f167b552a17e53a276873cabbc867ecc5696a9b96505cf00d19d026371b7
    release.openshift.io/version: 4.13.0-ec.4
  creationTimestamp: "2023-03-08T12:09:45Z"
  generation: 2
  labels:
    app: openshift-controller-manager-a
    controller-manager: "true"
    openshift-route-controller-manager-anti-affinity: "true"
    pod-template-hash: 7fc6fddf66
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/desired-replicas: {}
          f:deployment.kubernetes.io/max-replicas: {}
          f:deployment.kubernetes.io/revision: {}
          f:operator.openshift.io/spec-hash: {}
          f:release.openshift.io/version: {}
        f:labels:
          .: {}
          f:app: {}
          f:controller-manager: {}
          f:openshift-route-controller-manager-anti-affinity: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"a8efd566-f552-482c-bb79-dec1a75042e2"}: {}
      f:spec:
        f:replicas: {}
        f:selector: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:configmaps/client-ca: {}
              f:configmaps/config: {}
              f:configmaps/openshift-global-ca: {}
              f:configmaps/openshift-service-ca: {}
              f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
              f:target.workload.openshift.io/management: {}
            f:labels:
              .: {}
              f:app: {}
              f:controller-manager: {}
              f:openshift-route-controller-manager-anti-affinity: {}
              f:pod-template-hash: {}
            f:name: {}
          f:spec:
            f:affinity:
              .: {}
              f:podAntiAffinity:
                .: {}
                f:requiredDuringSchedulingIgnoredDuringExecution: {}
            f:containers:
              k:{"name":"controller-manager"}:
                .: {}
                f:args: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8443,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:capabilities:
                    .: {}
                    f:drop: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/client-ca"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/configmaps/config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/run/secrets/serving-cert"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:nodeSelector: {}
            f:priorityClassName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext:
              .: {}
              f:runAsNonRoot: {}
              f:seccompProfile:
                .: {}
                f:type: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              .: {}
              k:{"name":"client-ca"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"config"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"proxy-ca-bundles"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:items: {}
                  f:name: {}
                f:name: {}
              k:{"name":"serving-cert"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-03-08T12:10:05Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          .: {}
          k:{"type":"ReplicaFailure"}:
            .: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2023-03-08T12:10:25Z"
  name: controller-manager-7fc6fddf66
  namespace: openshift-controller-manager
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: controller-manager
    uid: a8efd566-f552-482c-bb79-dec1a75042e2
  resourceVersion: "6089"
  uid: 190caa35-765b-4335-97bf-45cc22ccac9f
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openshift-controller-manager-a
      controller-manager: "true"
      pod-template-hash: 7fc6fddf66
  template:
    metadata:
      annotations:
        configmaps/client-ca: "0"
        configmaps/config: "5368"
        configmaps/openshift-global-ca: "4922"
        configmaps/openshift-service-ca: "4914"
        openshiftcontrollermanagers.operator.openshift.io/cluster: "2"
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      creationTimestamp: null
      labels:
        app: openshift-controller-manager-a
        controller-manager: "true"
        openshift-route-controller-manager-anti-affinity: "true"
        pod-template-hash: 7fc6fddf66
      name: openshift-controller-manager
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: openshift-controller-manager-a
                controller-manager: "true"
                openshift-route-controller-manager-anti-affinity: "true"
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config=/var/run/configmaps/config/config.yaml
        - -v=2
        command:
        - openshift-controller-manager
        - start
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e829c4d1e1ee057d426b8965e0438754157b83fc2e985e285867a97edf509d35
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller-manager
        ports:
        - containerPort: 8443
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: healthz
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/configmaps/config
          name: config
        - mountPath: /var/run/configmaps/client-ca
          name: client-ca
        - mountPath: /var/run/secrets/serving-cert
          name: serving-cert
        - mountPath: /etc/pki/ca-trust/extracted/pem
          name: proxy-ca-bundles
      dnsPolicy: ClusterFirst
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: openshift-controller-manager-sa
      serviceAccountName: openshift-controller-manager-sa
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 120
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 120
      volumes:
      - configMap:
          defaultMode: 420
          name: config
        name: config
      - configMap:
          defaultMode: 420
          name: client-ca
        name: client-ca
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: serving-cert
      - configMap:
          defaultMode: 420
          items:
          - key: ca-bundle.crt
            path: tls-ca-bundle.pem
          name: openshift-global-ca
        name: proxy-ca-bundles
status:
  conditions:
  - lastTransitionTime: "2023-03-08T12:10:25Z"
    message: 'pods "controller-manager-7fc6fddf66-" is forbidden: error fetching namespace
      "openshift-controller-manager": unable to find annotation openshift.io/sa.scc.uid-range'
    reason: FailedCreate
    status: "True"
    type: ReplicaFailure
  observedGeneration: 2
  replicas: 0
