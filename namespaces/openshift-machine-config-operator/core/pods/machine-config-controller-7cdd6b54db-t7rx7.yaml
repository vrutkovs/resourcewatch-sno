apiVersion: v1
kind: Pod
metadata:
  annotations:
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.59/23"],"mac_address":"0a:58:0a:80:00:3b","gateway_ips":["10.128.0.1"],"ip_address":"10.128.0.59/23","gateway_ip":"10.128.0.1"}}'
    openshift.io/scc: restricted-v2
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
  creationTimestamp: "2023-03-08T12:19:55Z"
  generateName: machine-config-controller-7cdd6b54db-
  labels:
    k8s-app: machine-config-controller
    pod-template-hash: 7cdd6b54db
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:k8s-app: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"c575275c-e163-4b6b-8dec-27b93c1a5cb1"}: {}
      f:spec:
        f:containers:
          k:{"name":"machine-config-controller"}:
            .: {}
            f:args: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
          k:{"name":"oauth-proxy"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":9001,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/tls/cookie-secret"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/tls/private"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"cookie-secret"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"proxy-tls"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-03-08T12:19:55Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2023-03-08T12:19:55Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.ovn.org/pod-networks: {}
    manager: vrutkovs-sno
    operation: Update
    time: "2023-03-08T12:19:55Z"
  name: machine-config-controller-7cdd6b54db-t7rx7
  namespace: openshift-machine-config-operator
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: machine-config-controller-7cdd6b54db
    uid: c575275c-e163-4b6b-8dec-27b93c1a5cb1
  resourceVersion: "12073"
  uid: fdd343fc-c8df-47ad-a2b9-035dada93ebb
spec:
  containers:
  - args:
    - start
    - --resourcelock-namespace=openshift-machine-config-operator
    - --v=2
    command:
    - /usr/bin/machine-config-controller
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cd809b4b9f05e02149e45956000e29f75db7c144a2275ead651b5fec951268f9
    imagePullPolicy: IfNotPresent
    name: machine-config-controller
    resources:
      requests:
        cpu: 20m
        memory: 50Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1000310000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-9grf5
      readOnly: true
  - args:
    - --https-address=:9001
    - --provider=openshift
    - --openshift-service-account=machine-config-controller
    - --upstream=http://127.0.0.1:8797
    - --tls-cert=/etc/tls/private/tls.crt
    - --tls-key=/etc/tls/private/tls.key
    - --cookie-secret-file=/etc/tls/cookie-secret/cookie-secret
    - '--openshift-sar={"resource": "namespaces", "verb": "get"}'
    - '--openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5925f28a7682ef5cb91d4a3e3c9f6877ccc339ddb3533ad6376771314a79cb5a
    imagePullPolicy: IfNotPresent
    name: oauth-proxy
    ports:
    - containerPort: 9001
      name: metrics
      protocol: TCP
    resources:
      requests:
        cpu: 20m
        memory: 50Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1000310000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/tls/private
      name: proxy-tls
    - mountPath: /etc/tls/cookie-secret
      name: cookie-secret
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-9grf5
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: machine-config-controller-dockercfg-qn2h4
  nodeName: vrutkovs-sno
  nodeSelector:
    node-role.kubernetes.io/master: ""
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000310000
    seLinuxOptions:
      level: s0:c18,c2
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: machine-config-controller
  serviceAccountName: machine-config-controller
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 120
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 120
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: proxy-tls
    secret:
      defaultMode: 420
      secretName: mcc-proxy-tls
  - name: cookie-secret
    secret:
      defaultMode: 420
      secretName: cookie-secret
  - name: kube-api-access-9grf5
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-08T12:19:55Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-03-08T12:19:55Z"
    message: 'containers with unready status: [machine-config-controller oauth-proxy]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-03-08T12:19:55Z"
    message: 'containers with unready status: [machine-config-controller oauth-proxy]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-03-08T12:19:55Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cd809b4b9f05e02149e45956000e29f75db7c144a2275ead651b5fec951268f9
    imageID: ""
    lastState: {}
    name: machine-config-controller
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        reason: ContainerCreating
  - image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5925f28a7682ef5cb91d4a3e3c9f6877ccc339ddb3533ad6376771314a79cb5a
    imageID: ""
    lastState: {}
    name: oauth-proxy
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        reason: ContainerCreating
  hostIP: 10.0.130.68
  phase: Pending
  qosClass: Burstable
  startTime: "2023-03-08T12:19:55Z"
