apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/scc: hostmount-anyuid
  creationTimestamp: "2023-03-09T14:19:59Z"
  generateName: machine-config-operator-8494d5cfff-
  labels:
    k8s-app: machine-config-operator
    pod-template-hash: 8494d5cfff
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:k8s-app: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"8c7f1761-63c0-4ba4-a559-948ea90c5d54"}: {}
      f:spec:
        f:containers:
          k:{"name":"machine-config-operator"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"RELEASE_VERSION"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/mco/images"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/ssl/kubernetes/ca.crt"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:runAsNonRoot: {}
          f:runAsUser: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"images"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"root-ca"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2023-03-09T14:19:59Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          .: {}
          k:{"type":"PodScheduled"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: kube-scheduler
    operation: Update
    subresource: status
    time: "2023-03-09T14:19:59Z"
  name: machine-config-operator-8494d5cfff-425hs
  namespace: openshift-machine-config-operator
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: machine-config-operator-8494d5cfff
    uid: 8c7f1761-63c0-4ba4-a559-948ea90c5d54
  resourceVersion: "3114"
  uid: 035bd4ff-cb9c-449d-8009-2397c1aeb00d
spec:
  containers:
  - args:
    - start
    - --images-json=/etc/mco/images/images.json
    env:
    - name: RELEASE_VERSION
      value: 4.13.0-0.ci.test-2023-03-09-115511-ci-ln-88xnydk-latest
    image: registry.build05.ci.openshift.org/ci-ln-88xnydk/stable@sha256:bd71d26b8b646787500887be672ea8241ad05b6d9412d85569941b549898b01c
    imagePullPolicy: IfNotPresent
    name: machine-config-operator
    resources:
      requests:
        cpu: 20m
        memory: 50Mi
    securityContext:
      capabilities:
        drop:
        - MKNOD
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/ssl/kubernetes/ca.crt
      name: root-ca
    - mountPath: /etc/mco/images
      name: images
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-sg2wb
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: vrutkovs-sno
  nodeSelector:
    node-role.kubernetes.io/master: ""
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    seLinuxOptions:
      level: s0:c18,c7
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 120
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 120
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      name: machine-config-operator-images
    name: images
  - hostPath:
      path: /etc/kubernetes/ca.crt
      type: ""
    name: root-ca
  - name: kube-api-access-sg2wb
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-03-09T14:21:51Z"
    status: "True"
    type: PodScheduled
  phase: Pending
  qosClass: Burstable
